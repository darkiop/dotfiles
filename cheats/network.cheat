% network

# show ip interfaces and addresses
ip a

# show routing table
ip r

# show all network interfaces
tcpdump -D

# capture from any network device
tcpdump -i any

# do not convert addresses (and show ip and port)
tcpdump -n

# capture from a specific network interface
tcpdump -i <interface>

# show local traffic on eth0 and port 53
tcpdump -nt -i eth0 port 53

# show traffic by port
tcpdump port <port>

# show traffic to or from host
tcpdump host <ip>

# filter by source
tcpdump src <ip>

# filter by destination
tcpdump dst <ip>

# finding packets by network
tcpdump net <subnet>/<mask

# show traffic by protocol (icmp, udp, tcp, ...)
tcpdump <protocol>

# save traffic in file
tcpdump -p -s0 -w <filename>.pcap

# human date-time
tcpdump -tttt

# simple scan
nmap -sT <ip>

# scan all ports
nmap -p- <ip>

# ping scan subnet (x.x.x.x/24)
nmap -PE -sn -oG - <subnet>

# show all IPs of a subnet with hostnames
nmap -sL 192.168.1.1/24

# ping scan of a subnet
nmap -PE -sn -oG - 192.168.1.1/24

# extended ping scan of a subnet
nmap -sP -oG - 192.168.1.1/24

# start server
iperf3 -s

# connect to server
iperf3 -c <server>

# wakeonlan wol
/usr/bin/wakeonlan -i <ip> <mac>

# nfs - show exports on server
exportfs

# nfs - show exports from clientside
showmount -e <ip>

# show process of open port
netstat -plant

# kill process running on a given port
lsof -i :<port> \
   | awk '{l=$2} END {print l}' \
   | xargs kill

# list IPs connected on a given port
netstat -tn 2>/dev/null \
   | grep :<port> \
   | awk '{print $5}' \
   | cut -d: -f1 \
   | sort \
   | uniq -c \
   | sort -nr \
   | head

# show primary, local IP address
ifconfig \
  | grep -Eo 'inet (addr:)?([0-9]*\.){3}[0-9]*' \
  | grep -Eo '([0-9]*\.){3}[0-9]*' \
  | grep -v '127.0.0.1' \
  | tail -n1

# show external/public IP address
dig +short myip.opendns.com @resolver1.opendns.com