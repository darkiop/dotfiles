% ssh

# generate a key pair (ed25519) - custom path and comment
ssh-keygen -t ed25519 -a 420 -f ~/.ssh/<name>_ed25519 -C "<comment>"

# generate a key pair (rsa) - custom path and comment
ssh-keygen -t rsa -b 4096 -f ~/.ssh/<name>_rsa -C <comment>

# generate a key pair in default path: ~/.ssh
ssh-keygen -t rsa -b 4096

# connect to ssh server
ssh <user>@<server>

# connect to ssh server, with a special keyfile
ssh -i <file> <user>@<server>

# tunnel localhost@remote-host to local-port
ssh <user>p@<remote-host> -T -L <new-local-port>:localhost:<port>

# copy ssh id to server
ssh-copy-id <user>@<server>

# copy ssh id to server, with a special keyfile
ssh-copy-id -i <file> <user>@<server>

# copy ssh id to server - without ssh-copy-id
cat <file> | ssh <user>@<server> "mkdir ~/.ssh; cat >> ~/.ssh/authorized_keys"

# copy ssh id to server - my local key
cat .ssh/authorized_keys | grep thor-local | ssh <user>@<server> "mkdir ~/.ssh; cat >> ~/.ssh/authorized_keys"

# use tar to copy a directory via ssh
tar czf - <dir-source> | ssh <user>@<remotehost> 'tar xzf - -C <dir-target>'

# run command on remote host
ssh <user>@<host> bash -c "'<cmd>'"

# run ssh-agent
eval "$(ssh-agent -s)"

# stop ssh-agent
ssh-agent -k

# add SSH private key to the ssh-agent
ssh-add <ssh-key-file>

# sshfs mount
sshfs <user>@<server>:<source-path> <target-path> -o follow_symlinks -o idmap=user -o uid=$(id -u) -o gid=$(id -g) -o IdentityFile=~/.ssh/<ssh-key-file>

# sshfs umount
fusermount -u <mounted-sshfs>

$ file: ls
$ mounted-sshfs: mount | grep sshfs | awk '{print $3}'
$ ssh-key-file: ls ~/.ssh