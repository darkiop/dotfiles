% systemd - systemctl, service

# list failed units
systemctl --failed

# start service
systemctl start <service_inactive>

# stop service
systemctl stop <service_active>

# enable service
systemctl enable <service_disabled>

# disable service
systemctl disable <service_enabled>

# restart service
systemctl restart <service>

# reload service
systemctl reload <service_active>

# service status
systemctl status <service>

# list running services
systemctl list-units --type=service --state=running

# list enabled services
systemctl list-unit-files --type=service --state=enabled

# list disabled services
systemctl list-unit-files --type=service --state=disabled

# list dependencies
systemctl list-dependencies <service>

# daemon reload
systemctl daemon-reload

# list all available timers
systemctl list-timers --all

# show all logs of service
journalctl UNIT=<service>

# show live log of service
journalctl -f -u <service_active>

# delete journal logs older than 2 days
journalctl --vacuum-time=2days

# reboot to uefi
systemctl reboot --firmware-setup

# boot only a shell
systemctl set-default multi-user.target

# boot with gui
systemctl set-default graphical.target

# list all services
service --status-all

$ service_inactive: systemctl list-units --type=service --state=inactive | awk '{print $1}' | grep .service | sed 's/.service$//'
$ service_active: systemctl list-units --type=service --state=active | awk '{print $1}' | grep .service | sed 's/.service$//'
$ service_enabled: systemctl list-unit-files --type=service --state=enabled | awk '{print $1}' | grep .service | sed 's/.service$//'
$ service_disabled: systemctl list-unit-files --type=service --state=disabled | awk '{print $1}' | grep .service | sed 's/.service$//'
$ service: systemctl list-units --type=service --all | awk '{print $1}' | grep .service | sed 's/.service$//'